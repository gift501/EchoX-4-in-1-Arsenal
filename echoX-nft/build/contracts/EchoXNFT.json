{
  "contractName": "EchoXNFT",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TokenMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isMintEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isMintEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsMintEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mintThreeNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMintEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintThreeNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isMintEnabled\",\"type\":\"bool\"}],\"name\":\"setIsMintEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EchoXNFT.sol\":\"EchoXNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"project:/contracts/EchoXNFT.sol\":{\"keccak256\":\"0xf5c4eb78517c00ff23069865a8379074f53167ea126936887e47526d9c0da318\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e98fbe0b2ead6cad486c46806993c1d0350a75f52b414371a32905e6987820ea\",\"dweb:/ipfs/QmTVSiifsdbAtsbkf561woa9gGR9bTX5bGp8u3HcTMg3uc\"]}},\"version\":1}",
  "bytecode": "0x60803462000393576040906001600160401b03818301818111838210176200037f57835260098252602090681158d85a1bd613919560ba1b82840152835192848401848110838211176200037f57855260059081855264115613919560da1b848601528051928084116200037f575f93806200007c865462000397565b93601f9485811162000346575b508790858311600114620002df578792620002d3575b50508160011b915f199060031b1c19161784555b8551908111620002bf57600195620000cc875462000397565b83811162000286575b5085908383116001146200021257918086949261766960f01b9896946002989262000206575b50505f19600383901b1c191690881b1787555b60068054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a36200015d60085462000397565b90808211620001e0575b505050608560085560088152207f697066733a2f2f6261666b7265696361656f727634323666706e68366e33753681557f683332796a75326f37646465697278766e6a6b733661647a36627969716435758482015501556402540be40060095560ff19600a541617600a55516121b99081620003eb8239f35b620001fd92600391600886528686209301901c82019101620003d2565b5f808062000167565b015190505f80620000fb565b8786528686208893929091601f198416885b8181106200026e57509161766960f01b99979593918560029a9896941062000255575b505050811b0187556200010e565b01515f1960f88460031b161c191690555f808062000247565b8284015185558b9690940193928a01928a0162000224565b620002ae9088875287872085808601881c8201928a8710620002b5575b01871c0190620003d2565b5f620000d5565b92508192620002a3565b634e487b7160e01b84526041600452602484fd5b015190505f806200009f565b8780528888209250601f198416885b8a8282106200032f57505090846001959493921062000316575b505050811b018455620000b3565b01515f1960f88460031b161c191690555f808062000308565b6001859682939686015181550195019301620002ee565b6200036e90888052898920878086018a1c8201928c871062000375575b01891c0190620003d2565b5f62000089565b9250819262000363565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b90600182811c92168015620003c7575b6020831014620003b357565b634e487b7160e01b5f52602260045260245ffd5b91607f1691620003a7565b818110620003de575050565b5f8155600101620003d256fe60806040818152600480361015610014575f80fd5b5f92833560e01c90816301ffc9a7146114a35750806306fdde03146113dd578063081812fc1461138a578063095ea7b31461118c57806318160ddd1461114f57806323b872dd1461112a578063346de50a146110e857806342842e0e146110b45780634de8bcfb1461104057806355f804b314610e0f5780636352211e14610db45780636862c0d414610c585780636c0360eb14610b9057806370a0823114610aa1578063715018a614610a035780638da5cb5b146109b057806395d89b4114610891578063a22cb4651461075f578063b88d4fde146106b3578063c87b56dd14610312578063d5abeb01146102d5578063e985e9c5146102585763f2fde38b1461011d575f80fd5b346102545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610254576101546115f5565b9061015d6117ea565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101d1575050600654827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346102d157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15760ff816020936102966115f5565b61029e61161c565b73ffffffffffffffffffffffffffffffffffffffff91821683526005875283832091168252855220549151911615158152f35b5080fd5b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1576020906009549051908152f35b509190346102d157602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b0578335610373815f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f205416151590565b1561062e578091819581927a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000009081811015610621575b50506d04ee2d6d415b85acef810000000080881015610613575b50662386f26fc1000080881015610604575b506305f5e100808810156105f5575b50612710808810156105e6575b505060648610156105d6575b600a809610156105cc575b6001918281019661042b61041689611729565b9861042388519a8b6116e8565b808a52611729565b94846021898b01947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08099013687378b0101905b610572575b5050508451968793836008549161047a83611799565b928a82821691825f1461052d5750506001146104cd575b50505091806104ad6104ba95936104c998979551938491611591565b01039081018652856116e8565b519282849384528301906115b2565b0390f35b8993949550600882527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b838310610513575050508401019190806104ad6104c9610491565b80549783018501979097528a968a949092019181016104f8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001689820152841515909402880190930195508392506104ad91506104c99050610491565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff839101917f30313233343536373839616263646566000000000000000000000000000000008282061a83530490858261045f5750610464565b9060010190610403565b90946064600291049501906103f8565b90919296049501905f806103ec565b6008919397049601915f6103df565b6010919397049601915f6103d0565b86919397049601915f6103be565b0496508492505f806103a4565b608485858551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f546f6b656e2055524920717565727920666f72206e6f6e6578697374656e742060448201527f746f6b656e0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b8382346102d15760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1576106ec6115f5565b906106f561161c565b916044356064359367ffffffffffffffff851161075b573660238601121561075b576107306107539486602461075898369301359101611763565b9261074361073e8433611a6d565b611956565b61074e838383611b6f565b611ecc565b6119e1565b80f35b8580fd5b50903461025457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610254576107976115f5565b906024359182151580930361088d5773ffffffffffffffffffffffffffffffffffffffff1692833314610831575033845260056020528084208385526020528084207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1578051908260018054916108d383611799565b8086529282811690811561096a575060011461090e575b5050506108fc826104c99403836116e8565b519182916020835260208301906115b2565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828610610952575050506108fc8260206104c995820101946108ea565b80546020878701810191909152909501948101610935565b6104c99750869350602092506108fc9491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101946108ea565b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15760209073ffffffffffffffffffffffffffffffffffffffff600654169051908152f35b83346106b057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b057610a3a6117ea565b8073ffffffffffffffffffffffffffffffffffffffff6006547fffffffffffffffffffffffff00000000000000000000000000000000000000008116600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346102d15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15773ffffffffffffffffffffffffffffffffffffffff610af06115f5565b16908115610b0d5760208480858581526003845220549051908152f35b60849060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152fd5b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15780519082600854610bd081611799565b8085529160019180831690811561096a5750600114610bfb575050506108fc826104c99403836116e8565b9450600885527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b828610610c40575050506108fc8260206104c995820101946108ea565b80546020878701810191909152909501948101610c23565b50346102545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025457610c906115f5565b9160ff600a541615610d575760075460038101809111610d2b5760095410610cce578361075884610cc081611f78565b610cc981611f78565b611f78565b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f4d617820737570706c79206578636565646564000000000000000000000000006044820152fd5b6024856011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f4d696e74696e67206973206e6f7420656e61626c6564000000000000000000006044820152fd5b5091346106b05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b0575073ffffffffffffffffffffffffffffffffffffffff610e07602093356118ce565b915191168152f35b5082346106b0576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15767ffffffffffffffff90833582811161103c573660238201121561103c57610e729036906024818801359101611763565b93610e7b6117ea565b84519283116110105750610e90600854611799565b601f8111610fae575b5080601f8311600114610ef157508293829392610ee6575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161760085580f35b015190508380610eb1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0831694600885527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39285905b878210610f96575050836001959610610f5f575b505050811b0160085580f35b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055838080610f53565b80600185968294968601518155019501930190610f3f565b600884527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3601f840160051c810191838510611006575b601f0160051c01905b818110610ffb5750610e99565b848155600101610fee565b9091508190610fe5565b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b8382346102d15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d157358015158091036102d1576110846117ea565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600a5416911617600a5580f35b5050346102d157610753610758916110cb3661163f565b919251926110d88461169f565b86845261074361073e8433611a6d565b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15760209060ff600a541690519015158152f35b83346106b05761075861113c3661163f565b9161114a61073e8433611a6d565b611b6f565b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1576020906007549051908152f35b503461025457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610254576111c36115f5565b906024359273ffffffffffffffffffffffffffffffffffffffff9182806111e9876118ce565b16941693808514611307578033149081156112e8575b5015611266578486526020528420827fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905561123e836118ce565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff82872054165f6111ff565b50602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152fd5b5091346106b05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b0575073ffffffffffffffffffffffffffffffffffffffff610e07602093356118fe565b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15780519082805461141c81611799565b8085529160019180831690811561096a5750600114611447575050506108fc826104c99403836116e8565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82861061148b575050506108fc8260206104c995820101946108ea565b8054602087870181019190915290950194810161146e565b925050346102545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025457357fffffffff00000000000000000000000000000000000000000000000000000000811680910361025457602092507f80ac58cd000000000000000000000000000000000000000000000000000000008114908115611567575b811561153d575b5015158152f35b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150145f611536565b7f5b5e139f000000000000000000000000000000000000000000000000000000008114915061152f565b5f5b8381106115a25750505f910152565b8181015183820152602001611593565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936115ee81518092818752878088019101611591565b0116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361161857565b5f80fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361161857565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126116185773ffffffffffffffffffffffffffffffffffffffff90600435828116810361161857916024359081168103611618579060443590565b6020810190811067ffffffffffffffff8211176116bb57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176116bb57604052565b67ffffffffffffffff81116116bb57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b92919261176f82611729565b9161177d60405193846116e8565b829481845281830111611618578281602093845f960137010152565b90600182811c921680156117e0575b60208310146117b357565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916117a8565b73ffffffffffffffffffffffffffffffffffffffff60065416330361180b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b1561187057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152fd5b5f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f2054166118fb811515611869565b90565b61193161192c825f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f205416151590565b611869565b5f52600460205273ffffffffffffffffffffffffffffffffffffffff60405f20541690565b1561195d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152fd5b156119e857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b9073ffffffffffffffffffffffffffffffffffffffff8080611a8e846118ce565b16931691838314938415611ac1575b508315611aab575b50505090565b611ab7919293506118fe565b16145f8080611aa5565b9093505f52600560205260405f20825f5260205260ff60405f205416925f611a9d565b15611aeb57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152fd5b90611ba491611b7d846118ce565b9173ffffffffffffffffffffffffffffffffffffffff938493848094169485911614611ae4565b16918215611c6f5781611bc191611bba866118ce565b1614611ae4565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f8481526004602052604081207fffffffffffffffffffffffff0000000000000000000000000000000000000000908181541690558382526003602052604082207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b91929091803b15611ec357611d6c9360405190817f150b7a0200000000000000000000000000000000000000000000000000000000938482523360048301525f96876024840152604483015260806064830152818773ffffffffffffffffffffffffffffffffffffffff8260209b8c9760848301906115b2565b0393165af1849181611e6b575b50611e42575050503d5f14611e3a573d611d9281611729565b90611da060405192836116e8565b81528091833d92013e5b80519182611e37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b01fd5b506060611daa565b7fffffffff00000000000000000000000000000000000000000000000000000000161492509050565b9091508581813d8311611ebc575b611e8381836116e8565b8101031261088d57517fffffffff000000000000000000000000000000000000000000000000000000008116810361088d57905f611d79565b503d611e79565b50915050600190565b92939190803b15611f6e57611f459460405180927f150b7a02000000000000000000000000000000000000000000000000000000009485835233600484015273ffffffffffffffffffffffffffffffffffffffff809816602484015260448301526080606483015281806020998a9560848301906115b2565b03915f988991165af1849181611e6b5750611e42575050503d5f14611e3a573d611d9281611729565b5050915050600190565b906001600754019182600755604090815193611f938561169f565b5f9182865273ffffffffffffffffffffffffffffffffffffffff81169283156120c1577fb9144c96c86541f6fa89c9f2f02495cccf4b08cd6643e26d34ee00aa586558a89596836120b493818761075395612018612012845f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f205416151590565b1561211e565b612046612012845f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f205416151590565b81815260036020528a81206001815401905582815260026020528a8120827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4611cf2565b82519182526020820152a1565b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b1561212557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152fdfea26469706673582212203a9c87c02138701a2545f6212a0b469a016493e5253de673e078c29010fcf1fa64736f6c63430008140033",
  "deployedBytecode": "0x60806040818152600480361015610014575f80fd5b5f92833560e01c90816301ffc9a7146114a35750806306fdde03146113dd578063081812fc1461138a578063095ea7b31461118c57806318160ddd1461114f57806323b872dd1461112a578063346de50a146110e857806342842e0e146110b45780634de8bcfb1461104057806355f804b314610e0f5780636352211e14610db45780636862c0d414610c585780636c0360eb14610b9057806370a0823114610aa1578063715018a614610a035780638da5cb5b146109b057806395d89b4114610891578063a22cb4651461075f578063b88d4fde146106b3578063c87b56dd14610312578063d5abeb01146102d5578063e985e9c5146102585763f2fde38b1461011d575f80fd5b346102545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610254576101546115f5565b9061015d6117ea565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101d1575050600654827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346102d157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15760ff816020936102966115f5565b61029e61161c565b73ffffffffffffffffffffffffffffffffffffffff91821683526005875283832091168252855220549151911615158152f35b5080fd5b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1576020906009549051908152f35b509190346102d157602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b0578335610373815f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f205416151590565b1561062e578091819581927a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000009081811015610621575b50506d04ee2d6d415b85acef810000000080881015610613575b50662386f26fc1000080881015610604575b506305f5e100808810156105f5575b50612710808810156105e6575b505060648610156105d6575b600a809610156105cc575b6001918281019661042b61041689611729565b9861042388519a8b6116e8565b808a52611729565b94846021898b01947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08099013687378b0101905b610572575b5050508451968793836008549161047a83611799565b928a82821691825f1461052d5750506001146104cd575b50505091806104ad6104ba95936104c998979551938491611591565b01039081018652856116e8565b519282849384528301906115b2565b0390f35b8993949550600882527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b838310610513575050508401019190806104ad6104c9610491565b80549783018501979097528a968a949092019181016104f8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001689820152841515909402880190930195508392506104ad91506104c99050610491565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff839101917f30313233343536373839616263646566000000000000000000000000000000008282061a83530490858261045f5750610464565b9060010190610403565b90946064600291049501906103f8565b90919296049501905f806103ec565b6008919397049601915f6103df565b6010919397049601915f6103d0565b86919397049601915f6103be565b0496508492505f806103a4565b608485858551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f546f6b656e2055524920717565727920666f72206e6f6e6578697374656e742060448201527f746f6b656e0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b8382346102d15760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1576106ec6115f5565b906106f561161c565b916044356064359367ffffffffffffffff851161075b573660238601121561075b576107306107539486602461075898369301359101611763565b9261074361073e8433611a6d565b611956565b61074e838383611b6f565b611ecc565b6119e1565b80f35b8580fd5b50903461025457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610254576107976115f5565b906024359182151580930361088d5773ffffffffffffffffffffffffffffffffffffffff1692833314610831575033845260056020528084208385526020528084207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8480fd5b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1578051908260018054916108d383611799565b8086529282811690811561096a575060011461090e575b5050506108fc826104c99403836116e8565b519182916020835260208301906115b2565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828610610952575050506108fc8260206104c995820101946108ea565b80546020878701810191909152909501948101610935565b6104c99750869350602092506108fc9491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101946108ea565b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15760209073ffffffffffffffffffffffffffffffffffffffff600654169051908152f35b83346106b057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b057610a3a6117ea565b8073ffffffffffffffffffffffffffffffffffffffff6006547fffffffffffffffffffffffff00000000000000000000000000000000000000008116600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346102d15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15773ffffffffffffffffffffffffffffffffffffffff610af06115f5565b16908115610b0d5760208480858581526003845220549051908152f35b60849060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152fd5b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15780519082600854610bd081611799565b8085529160019180831690811561096a5750600114610bfb575050506108fc826104c99403836116e8565b9450600885527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b828610610c40575050506108fc8260206104c995820101946108ea565b80546020878701810191909152909501948101610c23565b50346102545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025457610c906115f5565b9160ff600a541615610d575760075460038101809111610d2b5760095410610cce578361075884610cc081611f78565b610cc981611f78565b611f78565b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f4d617820737570706c79206578636565646564000000000000000000000000006044820152fd5b6024856011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b90602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f4d696e74696e67206973206e6f7420656e61626c6564000000000000000000006044820152fd5b5091346106b05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b0575073ffffffffffffffffffffffffffffffffffffffff610e07602093356118ce565b915191168152f35b5082346106b0576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15767ffffffffffffffff90833582811161103c573660238201121561103c57610e729036906024818801359101611763565b93610e7b6117ea565b84519283116110105750610e90600854611799565b601f8111610fae575b5080601f8311600114610ef157508293829392610ee6575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161760085580f35b015190508380610eb1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0831694600885527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39285905b878210610f96575050836001959610610f5f575b505050811b0160085580f35b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055838080610f53565b80600185968294968601518155019501930190610f3f565b600884527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3601f840160051c810191838510611006575b601f0160051c01905b818110610ffb5750610e99565b848155600101610fee565b9091508190610fe5565b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b8382346102d15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d157358015158091036102d1576110846117ea565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600a5416911617600a5580f35b5050346102d157610753610758916110cb3661163f565b919251926110d88461169f565b86845261074361073e8433611a6d565b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15760209060ff600a541690519015158152f35b83346106b05761075861113c3661163f565b9161114a61073e8433611a6d565b611b6f565b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d1576020906007549051908152f35b503461025457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610254576111c36115f5565b906024359273ffffffffffffffffffffffffffffffffffffffff9182806111e9876118ce565b16941693808514611307578033149081156112e8575b5015611266578486526020528420827fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905561123e836118ce565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff82872054165f6111ff565b50602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152fd5b5091346106b05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106b0575073ffffffffffffffffffffffffffffffffffffffff610e07602093356118fe565b5050346102d157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102d15780519082805461141c81611799565b8085529160019180831690811561096a5750600114611447575050506108fc826104c99403836116e8565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82861061148b575050506108fc8260206104c995820101946108ea565b8054602087870181019190915290950194810161146e565b925050346102545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261025457357fffffffff00000000000000000000000000000000000000000000000000000000811680910361025457602092507f80ac58cd000000000000000000000000000000000000000000000000000000008114908115611567575b811561153d575b5015158152f35b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150145f611536565b7f5b5e139f000000000000000000000000000000000000000000000000000000008114915061152f565b5f5b8381106115a25750505f910152565b8181015183820152602001611593565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936115ee81518092818752878088019101611591565b0116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361161857565b5f80fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361161857565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126116185773ffffffffffffffffffffffffffffffffffffffff90600435828116810361161857916024359081168103611618579060443590565b6020810190811067ffffffffffffffff8211176116bb57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176116bb57604052565b67ffffffffffffffff81116116bb57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b92919261176f82611729565b9161177d60405193846116e8565b829481845281830111611618578281602093845f960137010152565b90600182811c921680156117e0575b60208310146117b357565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916117a8565b73ffffffffffffffffffffffffffffffffffffffff60065416330361180b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b1561187057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152fd5b5f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f2054166118fb811515611869565b90565b61193161192c825f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f205416151590565b611869565b5f52600460205273ffffffffffffffffffffffffffffffffffffffff60405f20541690565b1561195d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152fd5b156119e857565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b9073ffffffffffffffffffffffffffffffffffffffff8080611a8e846118ce565b16931691838314938415611ac1575b508315611aab575b50505090565b611ab7919293506118fe565b16145f8080611aa5565b9093505f52600560205260405f20825f5260205260ff60405f205416925f611a9d565b15611aeb57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152fd5b90611ba491611b7d846118ce565b9173ffffffffffffffffffffffffffffffffffffffff938493848094169485911614611ae4565b16918215611c6f5781611bc191611bba866118ce565b1614611ae4565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f8481526004602052604081207fffffffffffffffffffffffff0000000000000000000000000000000000000000908181541690558382526003602052604082207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b91929091803b15611ec357611d6c9360405190817f150b7a0200000000000000000000000000000000000000000000000000000000938482523360048301525f96876024840152604483015260806064830152818773ffffffffffffffffffffffffffffffffffffffff8260209b8c9760848301906115b2565b0393165af1849181611e6b575b50611e42575050503d5f14611e3a573d611d9281611729565b90611da060405192836116e8565b81528091833d92013e5b80519182611e37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b01fd5b506060611daa565b7fffffffff00000000000000000000000000000000000000000000000000000000161492509050565b9091508581813d8311611ebc575b611e8381836116e8565b8101031261088d57517fffffffff000000000000000000000000000000000000000000000000000000008116810361088d57905f611d79565b503d611e79565b50915050600190565b92939190803b15611f6e57611f459460405180927f150b7a02000000000000000000000000000000000000000000000000000000009485835233600484015273ffffffffffffffffffffffffffffffffffffffff809816602484015260448301526080606483015281806020998a9560848301906115b2565b03915f988991165af1849181611e6b5750611e42575050503d5f14611e3a573d611d9281611729565b5050915050600190565b906001600754019182600755604090815193611f938561169f565b5f9182865273ffffffffffffffffffffffffffffffffffffffff81169283156120c1577fb9144c96c86541f6fa89c9f2f02495cccf4b08cd6643e26d34ee00aa586558a89596836120b493818761075395612018612012845f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f205416151590565b1561211e565b612046612012845f52600260205273ffffffffffffffffffffffffffffffffffffffff60405f205416151590565b81815260036020528a81206001815401905582815260026020528a8120827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4611cf2565b82519182526020820152a1565b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b1561212557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152fdfea26469706673582212203a9c87c02138701a2545f6212a0b469a016493e5253de673e078c29010fcf1fa64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "319:1740:13:-:0;;;;;;-1:-1:-1;;;;;319:1740:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;319:1740:13;;;;;;;;;;;;-1:-1:-1;319:1740:13;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;319:1740:13;;;;;;;;;-1:-1:-1;;;;319:1740:13;;;;;;;;;;;;;;2518:6:0;319:1740:13;;719:10:6;-1:-1:-1;;;;;;319:1740:13;;;;;;;-1:-1:-1;;;;;319:1740:13;2566:40:0;;;;319:1740:13;468:68;319:1740;;:::i;:::-;;;;;;;;;;;;468:68;319:1740;468:68;319:1740;;;;;;;;;;;;;570:11;319:1740;;;;814:20;319:1740;;;814:20;319:1740;;;;;;;;;;;;;;468:68;319:1740;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;319:1740:13;;;;;;;;;;;;;;;;-1:-1:-1;;319:1740:13;;;;;;;;;;;-1:-1:-1;;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;319:1740:13;;;;;;;;;;;;-1:-1:-1;319:1740:13;;;;;;;;;;;;-1:-1:-1;;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;319:1740:13;;;;;-1:-1:-1;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "319:1740:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;319:1740:13;;;;2162:22:0;;;319:1740:13;;;;2518:6:0;319:1740:13;;;;;;2518:6:0;319:1740:13;;2566:40:0;;;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;4508:18:1;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:38;319:1740;;;;;;;;;;;;;;;;;;;;;;;;;1813:16;;-1:-1:-1;319:1740:13;6794:7:1;319:1740:13;;;;-1:-1:-1;319:1740:13;;;7208:31:1;;7120:126;;1813:16:13;319:1740;;;1921:25;569:17:8;;10211:18:11;;10276:8;;10267:17;;;;;10263:103;;319:1740:13;10392:8:11;;;10383:17;;;;10379:103;;319:1740:13;10508:8:11;;10499:17;;;;10495:103;;319:1740:13;10624:7:11;;10615:16;;;;10611:100;;319:1740:13;10737:7:11;;10728:16;;;;10724:100;;319:1740:13;10841:16:11;;10850:7;10841:16;;;10837:100;;319:1740:13;10963:7:11;10954:16;;;;10950:66;;319:1740:13;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;731:76:8;319:1740:13;;;;;;;;;;;731:76:8;;;820:280;319:1740:13;;;820:280:8;319:1740:13;;;;;;;;;1912:7;319:1740;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1895:52;319:1740;;;;;;;;;;;:::i;:::-;;1895:52;;;;;;;;:::i;:::-;319:1740;;;;;;;;;;;:::i;:::-;;;;;;;;;;1912:7;319:1740;;;;;;;;;-1:-1:-1;;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1895:52;;;319:1740;;;;;;;;;;;;;-1:-1:-1;319:1740:13;;-1:-1:-1;319:1740:13;;-1:-1:-1;319:1740:13;;-1:-1:-1;319:1740:13;;820:280:8;319:1740:13;;;;925:93:8;;;;;;;;319:1740:13;1068:10:8;;;820:280;1064:21;1080:5;;;10950:66:11;319:1740:13;;;10950:66:11;;;10837:100;319:1740:13;;10850:7:11;10921:1;319:1740:13;;;;10837:100:11;;;10724;319:1740:13;;;;;;;10724:100:11;;;;;10611;10695:1;319:1740:13;;;;;;10611:100:11;;;;10495:103;10581:2;319:1740:13;;;;;;10495:103:11;;;;10379;319:1740:13;;;;;;;10379:103:11;;;;10263;319:1740:13;;-1:-1:-1;10339:12:11;;-1:-1:-1;10263:103:11;;;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6484:47:1;319:1740:13;;;6476:110:1;319:1740:13;;;;;;;;:::i;:::-;719:10:6;5311:99:1;5319:41;719:10:6;;5319:41:1;:::i;:::-;5311:99;:::i;:::-;6458:7;;;;;:::i;:::-;6484:47;:::i;:::-;6476:110;:::i;:::-;319:1740:13;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;719:10:6;;;12990:17:1;319:1740:13;;719:10:6;;319:1740:13;;13047:18:1;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;13108:41:1;319:1740:13;719:10:6;13108:41:1;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2721:7:1;319:1740:13;;;;;;:::i;:::-;;;;;;;;;2721:7:1;;;;319:1740:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:6:0;319:1740:13;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;319:1740:13;;2518:6:0;319:1740:13;;;;2518:6:0;319:1740:13;;2566:40:0;;;;319:1740:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;2028:19:1;;;319:1740:13;;;;;;;;;2110:9:1;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:92;319:1740;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;444:92;319:1740;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1311:13;319:1740;;;;;1369:9;319:1740;1391:1;319:1740;;;;;;;1396:9;319:1740;-1:-1:-1;319:1740:13;;1449:2;1493;1449;;;;:::i;:::-;1471;;;:::i;:::-;1493;:::i;319:1740::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;319:1740:13;;;;;;;;;1019:18;319:1740;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:18;319:1740;;;;;;;-1:-1:-1;319:1740:13;;;;;;;;;;1019:18;319:1740;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:18;319:1740;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:18;319:1740;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;319:1740:13;;1166:30;319:1740;;;;;1166:30;319:1740;;;;;;;;;6484:47:1;6476:110;319:1740:13;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5311:99:1;5319:41;719:10:6;;5319:41:1;:::i;319:1740:13:-;;;;;;;;;;;;;;;;609:25;319:1740;;;;;;;;;;;;;;;4893:7:1;319:1740:13;;;:::i;:::-;719:10:6;4763:99:1;4771:41;719:10:6;;4771:41:1;:::i;4763:99::-;4893:7;:::i;319:1740:13:-;;;;;;;;;;;;;;;2031:9;319:1740;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;3564:23:1;;;;;;:::i;:::-;319:1740:13;;;3605:11:1;;;;319:1740:13;;719:10:6;;3686:21:1;:62;;;;;319:1740:13;;;;;;;;;;;;;;;;;;;;12699:23:1;;;:::i;:::-;319:1740:13;12690:46:1;;;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3686:62:1;319:1740:13;;;;4508:18:1;319:1740:13;;;;;719:10:6;319:1740:13;;;;;;;;;;3686:62:1;;;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:40:1;;1722:25;1707:40;;:104;;;;;319:1740:13;1707:156:1;;;;319:1740:13;;;;;;;1707:156:1;952:25:9;937:40;;;1707:156:1;;;:104;1778:33;1763:48;;;-1:-1:-1;1707:104:1;;319:1740:13;;;;;;;;-1:-1:-1;;319:1740:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;319:1740:13;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1359:130:0;319:1740:13;1273:6:0;319:1740:13;;719:10:6;1422:23:0;319:1740:13;;1359:130:0:o;319:1740:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;2190:219:1;-1:-1:-1;319:1740:13;6794:7:1;319:1740:13;;;;-1:-1:-1;319:1740:13;;;2324:56:1;2332:19;;;2324:56;:::i;:::-;2190:219;:::o;3935:167::-;13313:53;13321:16;;-1:-1:-1;319:1740:13;6794:7:1;319:1740:13;;;;-1:-1:-1;319:1740:13;;;7208:31:1;;7120:126;;13321:16;13313:53;:::i;:::-;-1:-1:-1;319:1740:13;4071:15:1;319:1740:13;;;;-1:-1:-1;319:1740:13;;;3935:167:1;:::o;319:1740:13:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7404:261:1;;319:1740:13;7529:23:1;;;;;:::i;:::-;319:1740:13;;;7570:16:1;;;;:52;;;;;7404:261;7570:87;;;;;7404:261;7562:96;;;7404:261;:::o;7570:87::-;7626:20;;;;;;:::i;:::-;319:1740:13;7626:31:1;7570:87;;;;;:52;319:1740:13;;;-1:-1:-1;319:1740:13;4508:18:1;319:1740:13;;;-1:-1:-1;319:1740:13;;-1:-1:-1;319:1740:13;;;;;-1:-1:-1;319:1740:13;;;7570:52:1;;;;319:1740:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;11257:1203:1;;11346:81;11257:1203;11354:23;;;:::i;:::-;319:1740:13;;;;;;;;;;;;;11354:31:1;11346:81;:::i;:::-;319:1740:13;11445:16:1;;;319:1740:13;;11655:23:1;11647:81;11655:23;;;;:::i;:::-;319:1740:13;11655:31:1;11647:81;:::i;:::-;12374:27;11459:1;319:1740:13;;;11797:15:1;319:1740:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12284:1:1;319:1740:13;;;;;;;;12337:7:1;319:1740:13;;;;;;;;;;;;;12374:27:1;;11257:1203::o;319:1740:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;13925:831:1;;;;;1702:19:5;;:23;:19;;319:1740:13;;;;;;;14129:71:1;;;;719:10:6;14129:71:1;;;319:1740:13;;;;;;;;;;;;;;;;;14129:71:1;;319:1740:13;14129:71:1;;319:1740:13;;;;;;;;:::i;:::-;14129:71:1;319:1740:13;;14129:71:1;;;;;;;14090:660;-1:-1:-1;14125:573:1;;14317:381;;;319:1740:13;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;14367:18:1;;;319:1740:13;;14409:60:1;;;319:1740:13;14129:71:1;14409:60;;319:1740:13;;;;;;;;;;;;;;;;;;;14363:321:1;14571:95;;319:1740:13;;;;;14125:573:1;319:1740:13;;14250:51:1;;-1:-1:-1;319:1740:13;-1:-1:-1;14243:58:1:o;14129:71::-;;;;;;;;;;;;;;;;;:::i;:::-;;;319:1740:13;;;;;;;;;;;;14129:71:1;;;;;;;;;14090:660;14728:11;;;;14735:4;14728:11;:::o;13925:831::-;;;;;1702:19:5;;:23;:19;;319:1740:13;;;;;;;14129:71:1;;;;719:10:6;14129:71:1;;;319:1740:13;;;;;;;;;;;;;;;;;;14129:71:1;;;319:1740:13;;;;;;;;:::i;:::-;14129:71:1;-1:-1:-1;;319:1740:13;;;;14129:71:1;;;;;;;-1:-1:-1;14125:573:1;;14317:381;;;319:1740:13;;;;;;;;;:::i;14090:660:1:-;14728:11;;;;;14735:4;14728:11;:::o;1509:200:13:-;;1050:1:7;1557:9:13;319:1740;;;;1557:9;319:1740;;;;;;;;;:::i;:::-;-1:-1:-1;319:1740:13;;;;;;;9004:16:1;;;319:1740:13;;1676:26;9076:16:1;;;8446:150;9076:16;;;8467:53;9076:16;9067:58;9076:16;;-1:-1:-1;319:1740:13;6794:7:1;319:1740:13;;;;-1:-1:-1;319:1740:13;;;7208:31:1;;7120:126;;9076:16;9075:17;9067:58;:::i;:::-;9271;9280:16;;-1:-1:-1;319:1740:13;6794:7:1;319:1740:13;;;;-1:-1:-1;319:1740:13;;;7208:31:1;;7120:126;;9271:58;319:1740:13;;;9671:9:1;319:1740:13;;;;;1050:1:7;319:1740:13;;;;;;;;9710:7:1;319:1740:13;;;;;;;;;;;;;9747:33:1;;;;8467:53;:::i;8446:150::-;319:1740:13;;;;;;;;;1676:26;1509:200::o;319:1740::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\"; // Make sure to import Strings for tokenURI\n\ncontract EchoXNFT is ERC721, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    string public baseURI = \"ipfs://bafkreicaeorv426fpnh6n3u6h32yju2o7ddeirxvnjks6adz6byiqd5uvi\";\n\n    uint256 public maxSupply = 10000000000; // Example max supply\n    bool public isMintEnabled; // Minting flag\n\n    event TokenMinted(address to, uint256 tokenId);\n\n    // Constructor with minting enabled by default\n    constructor() ERC721(\"EcahoXNFT\", \"EXNFT\") {\n        isMintEnabled = true; // Set minting enabled by default\n    }\n\n    // Function to set the base URI. Useful for updating metadata.\n    function setBaseURI(string memory _baseURI) public onlyOwner {\n        baseURI = _baseURI;\n    }\n\n    // Function to enable/disable minting\n    function setIsMintEnabled(bool _isMintEnabled) public onlyOwner {\n        isMintEnabled = _isMintEnabled;\n    }\n\n    // Minting function (users call this)\n    function mintThreeNFTs(address to) public {\n        require(isMintEnabled, \"Minting is not enabled\");\n        require(_tokenIds.current() + 3 <= maxSupply, \"Max supply exceeded\");\n\n        _mintNFT(to);\n        _mintNFT(to);\n        _mintNFT(to);\n    }\n\n    function _mintNFT(address to) private {\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n        _safeMint(to, newItemId);\n        emit TokenMinted(to, newItemId);\n    }\n\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        require(_exists(tokenId), \"Token URI query for nonexistent token\");\n        return string(abi.encodePacked(baseURI, Strings.toString(tokenId)));\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _tokenIds.current();\n    }\n}\n",
  "sourcePath": "/workspaces/echoX-nft/echoX-nft/contracts/EchoXNFT.sol",
  "ast": {
    "absolutePath": "project:/contracts/EchoXNFT.sol",
    "exportedSymbols": {
      "Address": [
        1530
      ],
      "Context": [
        1552
      ],
      "Counters": [
        1626
      ],
      "ERC165": [
        1879
      ],
      "ERC721": [
        1039
      ],
      "EchoXNFT": [
        3029
      ],
      "IERC165": [
        1891
      ],
      "IERC721": [
        1155
      ],
      "IERC721Metadata": [
        1200
      ],
      "IERC721Receiver": [
        1173
      ],
      "Math": [
        2757
      ],
      "Ownable": [
        112
      ],
      "SignedMath": [
        2862
      ],
      "Strings": [
        1855
      ]
    },
    "id": 3030,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2864,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:13"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2865,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3030,
        "sourceUnit": 1040,
        "src": "58:57:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2866,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3030,
        "sourceUnit": 113,
        "src": "116:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2867,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3030,
        "sourceUnit": 1627,
        "src": "169:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 2868,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3030,
        "sourceUnit": 1856,
        "src": "222:51:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2869,
              "name": "ERC721",
              "nameLocations": [
                "340:6:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1039,
              "src": "340:6:13"
            },
            "id": 2870,
            "nodeType": "InheritanceSpecifier",
            "src": "340:6:13"
          },
          {
            "baseName": {
              "id": 2871,
              "name": "Ownable",
              "nameLocations": [
                "348:7:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "348:7:13"
            },
            "id": 2872,
            "nodeType": "InheritanceSpecifier",
            "src": "348:7:13"
          }
        ],
        "canonicalName": "EchoXNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3029,
        "linearizedBaseContracts": [
          3029,
          112,
          1039,
          1200,
          1155,
          1879,
          1891,
          1552
        ],
        "name": "EchoXNFT",
        "nameLocation": "328:8:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 2876,
            "libraryName": {
              "id": 2873,
              "name": "Counters",
              "nameLocations": [
                "368:8:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1626,
              "src": "368:8:13"
            },
            "nodeType": "UsingForDirective",
            "src": "362:36:13",
            "typeName": {
              "id": 2875,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2874,
                "name": "Counters.Counter",
                "nameLocations": [
                  "381:8:13",
                  "390:7:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1558,
                "src": "381:16:13"
              },
              "referencedDeclaration": 1558,
              "src": "381:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1558_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2879,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "428:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "403:34:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1558_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2878,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2877,
                "name": "Counters.Counter",
                "nameLocations": [
                  "403:8:13",
                  "412:7:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1558,
                "src": "403:16:13"
              },
              "referencedDeclaration": 1558,
              "src": "403:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1558_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 2882,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "458:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "444:92:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2880,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "444:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "697066733a2f2f6261666b7265696361656f727634323666706e68366e337536683332796a75326f37646465697278766e6a6b733661647a36627969716435757669",
              "id": 2881,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "468:68:13",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a4f44f7aec917a36e40bd0e87dba088c0700b91f0f2cfa8ae0a3d13ce63dc864",
                "typeString": "literal_string \"ipfs://bafkreicaeorv426fpnh6n3u6h32yju2o7ddeirxvnjks6adz6byiqd5uvi\""
              },
              "value": "ipfs://bafkreicaeorv426fpnh6n3u6h32yju2o7ddeirxvnjks6adz6byiqd5uvi"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5abeb01",
            "id": 2885,
            "mutability": "mutable",
            "name": "maxSupply",
            "nameLocation": "558:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "543:38:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2883,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "543:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030303030303030",
              "id": 2884,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "570:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000_by_1",
                "typeString": "int_const 10000000000"
              },
              "value": "10000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "346de50a",
            "id": 2887,
            "mutability": "mutable",
            "name": "isMintEnabled",
            "nameLocation": "621:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "609:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2886,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "609:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "b9144c96c86541f6fa89c9f2f02495cccf4b08cd6643e26d34ee00aa586558a8",
            "id": 2893,
            "name": "TokenMinted",
            "nameLocation": "663:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2889,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "683:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "675:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2891,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "695:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "687:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "674:29:13"
            },
            "src": "657:47:13"
          },
          {
            "body": {
              "id": 2904,
              "nodeType": "Block",
              "src": "804:71:13",
              "statements": [
                {
                  "expression": {
                    "id": 2902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2900,
                      "name": "isMintEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2887,
                      "src": "814:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "830:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "814:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2903,
                  "nodeType": "ExpressionStatement",
                  "src": "814:20:13"
                }
              ]
            },
            "id": 2905,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456361686f584e4654",
                    "id": 2896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "782:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a61eed912e3dcda4a9f90c17447466cda1d81bcc50b171d85936d940007ad82f",
                      "typeString": "literal_string \"EcahoXNFT\""
                    },
                    "value": "EcahoXNFT"
                  },
                  {
                    "hexValue": "45584e4654",
                    "id": 2897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "795:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_369ccbd860ad9905dd10c383adac30df947bb09911195e6dc4800391c091d465",
                      "typeString": "literal_string \"EXNFT\""
                    },
                    "value": "EXNFT"
                  }
                ],
                "id": 2898,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2895,
                  "name": "ERC721",
                  "nameLocations": [
                    "775:6:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1039,
                  "src": "775:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "775:28:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:2:13"
            },
            "returnParameters": {
              "id": 2899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "804:0:13"
            },
            "scope": 3029,
            "src": "761:114:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2916,
              "nodeType": "Block",
              "src": "1009:35:13",
              "statements": [
                {
                  "expression": {
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2912,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "1019:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2913,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2907,
                      "src": "1029:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1019:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2915,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:18:13"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 2917,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2909,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "999:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "999:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "999:9:13"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "957:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2907,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "982:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2917,
                  "src": "968:22:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:24:13"
            },
            "returnParameters": {
              "id": 2911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:13"
            },
            "scope": 3029,
            "src": "948:96:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2928,
              "nodeType": "Block",
              "src": "1156:47:13",
              "statements": [
                {
                  "expression": {
                    "id": 2926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2924,
                      "name": "isMintEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2887,
                      "src": "1166:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2925,
                      "name": "_isMintEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2919,
                      "src": "1182:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1166:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2927,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:30:13"
                }
              ]
            },
            "functionSelector": "4de8bcfb",
            "id": 2929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2922,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2921,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1146:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1146:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1146:9:13"
              }
            ],
            "name": "setIsMintEnabled",
            "nameLocation": "1101:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "_isMintEnabled",
                  "nameLocation": "1123:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2929,
                  "src": "1118:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2918,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1117:21:13"
            },
            "returnParameters": {
              "id": 2923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:13"
            },
            "scope": 3029,
            "src": "1092:111:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2962,
              "nodeType": "Block",
              "src": "1293:210:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2935,
                        "name": "isMintEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2887,
                        "src": "1311:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67206973206e6f7420656e61626c6564",
                        "id": 2936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1326:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_074edb06bc2c283d1123114ebfffa3e3cbf780cc3fcf237b7da0237729f6c25e",
                          "typeString": "literal_string \"Minting is not enabled\""
                        },
                        "value": "Minting is not enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_074edb06bc2c283d1123114ebfffa3e3cbf780cc3fcf237b7da0237729f6c25e",
                          "typeString": "literal_string \"Minting is not enabled\""
                        }
                      ],
                      "id": 2934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1303:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:48:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2938,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:48:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2940,
                                "name": "_tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2879,
                                "src": "1369:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Counter_$1558_storage",
                                  "typeString": "struct Counters.Counter storage ref"
                                }
                              },
                              "id": 2941,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1379:7:13",
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1570,
                              "src": "1369:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1558_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1558_storage_ptr_$",
                                "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                              }
                            },
                            "id": 2942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1369:19:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 2943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1391:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1369:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2945,
                          "name": "maxSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2885,
                          "src": "1396:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1369:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d617820737570706c79206578636565646564",
                        "id": 2947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1407:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f",
                          "typeString": "literal_string \"Max supply exceeded\""
                        },
                        "value": "Max supply exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b608f755d10a61bd7bfbe50c676755794b42b2dd9daf91b7deb384eabaa476f",
                          "typeString": "literal_string \"Max supply exceeded\""
                        }
                      ],
                      "id": 2939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1361:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:68:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2949,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:68:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2951,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2931,
                        "src": "1449:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2950,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2990,
                      "src": "1440:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1440:12:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2953,
                  "nodeType": "ExpressionStatement",
                  "src": "1440:12:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2955,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2931,
                        "src": "1471:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2954,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2990,
                      "src": "1462:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1462:12:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2957,
                  "nodeType": "ExpressionStatement",
                  "src": "1462:12:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2959,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2931,
                        "src": "1493:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2958,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2990,
                      "src": "1484:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:12:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2961,
                  "nodeType": "ExpressionStatement",
                  "src": "1484:12:13"
                }
              ]
            },
            "functionSelector": "6862c0d4",
            "id": 2963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintThreeNFTs",
            "nameLocation": "1260:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2931,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1282:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2963,
                  "src": "1274:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:12:13"
            },
            "returnParameters": {
              "id": 2933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1293:0:13"
            },
            "scope": 3029,
            "src": "1251:252:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2989,
              "nodeType": "Block",
              "src": "1547:162:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2968,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2879,
                        "src": "1557:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1558_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2970,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1567:9:13",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1584,
                      "src": "1557:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1558_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1558_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1557:21:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2972,
                  "nodeType": "ExpressionStatement",
                  "src": "1557:21:13"
                },
                {
                  "assignments": [
                    2974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2974,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "1596:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2989,
                      "src": "1588:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2973,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1588:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2978,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2975,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2879,
                        "src": "1608:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1558_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2976,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1618:7:13",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1570,
                      "src": "1608:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1558_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1558_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1588:39:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2980,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2965,
                        "src": "1647:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2981,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "1651:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2979,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        607,
                        636
                      ],
                      "referencedDeclaration": 607,
                      "src": "1637:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2983,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:24:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2985,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2965,
                        "src": "1688:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2986,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "1692:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2984,
                      "name": "TokenMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2893,
                      "src": "1676:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2988,
                  "nodeType": "EmitStatement",
                  "src": "1671:31:13"
                }
              ]
            },
            "id": 2990,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintNFT",
            "nameLocation": "1518:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2965,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1535:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2990,
                  "src": "1527:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1526:12:13"
            },
            "returnParameters": {
              "id": 2967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1547:0:13"
            },
            "scope": 3029,
            "src": "1509:200:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              317
            ],
            "body": {
              "id": 3017,
              "nodeType": "Block",
              "src": "1795:160:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3000,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2992,
                            "src": "1821:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2999,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 558,
                          "src": "1813:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 3001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1813:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 3002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1831:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57bc8f56c90c571e53a0e79688ea6fe8e1d504f7bd6c57de35ed46366190538f",
                          "typeString": "literal_string \"Token URI query for nonexistent token\""
                        },
                        "value": "Token URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57bc8f56c90c571e53a0e79688ea6fe8e1d504f7bd6c57de35ed46366190538f",
                          "typeString": "literal_string \"Token URI query for nonexistent token\""
                        }
                      ],
                      "id": 2998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1805:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:66:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3004,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:66:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3009,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "1912:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3012,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2992,
                                "src": "1938:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3010,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1855,
                                "src": "1921:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$1855_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1929:8:13",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1685,
                              "src": "1921:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 3013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1921:25:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3007,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1895:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1899:12:13",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1895:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1895:52:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1888:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3005,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1888:6:13",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1888:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2997,
                  "id": 3016,
                  "nodeType": "Return",
                  "src": "1881:67:13"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 3018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1724:8:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2994,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1762:8:13"
            },
            "parameters": {
              "id": 2993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2992,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1741:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3018,
                  "src": "1733:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1732:17:13"
            },
            "returnParameters": {
              "id": 2997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2996,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3018,
                  "src": "1780:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2995,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1779:15:13"
            },
            "scope": 3029,
            "src": "1715:240:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3027,
              "nodeType": "Block",
              "src": "2014:43:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3023,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2879,
                        "src": "2031:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1558_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2041:7:13",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1570,
                      "src": "2031:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1558_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1558_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3022,
                  "id": 3026,
                  "nodeType": "Return",
                  "src": "2024:26:13"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 3028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1970:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:2:13"
            },
            "returnParameters": {
              "id": 3022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3021,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "2005:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:9:13"
            },
            "scope": 3029,
            "src": "1961:96:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3030,
        "src": "319:1740:13",
        "usedErrors": [],
        "usedEvents": [
          13,
          1054,
          1063,
          1072,
          2893
        ]
      }
    ],
    "src": "32:2028:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "421614": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256"
            }
          ],
          "name": "BatchMetadataUpdate",
          "type": "event"
        },
        "0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "MetadataUpdate",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xb9144c96c86541f6fa89c9f2f02495cccf4b08cd6643e26d34ee00aa586558a8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "TokenMinted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2Cf53018BE3cd487172ce83ADEEa34eC7199a42d",
      "transactionHash": "0xee3c267a840befc7cbcd7598e9fc132d7ba70188acc43142a4521fcfea2a3944"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-06-12T07:50:21.259Z",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}